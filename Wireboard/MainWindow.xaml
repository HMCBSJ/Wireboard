<controls:MetroWindow x:Name="winMain" x:Class="Wireboard.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:p="clr-namespace:Wireboard.Properties"
        xmlns:local="clr-namespace:Wireboard"
        xmlns:usercontrol="clr-namespace:Wireboard.UserControls"
        xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        xmlns:converter="clr-namespace:Wireboard.Converters"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"              
        mc:Ignorable="d"
        Title="{StaticResource AppName}" Height="270" Width="700" MinHeight="250" MinWidth="580"
        SaveWindowPosition="True"
        ShowMaxRestoreButton="False"
        Dialog:DialogParticipation.Register="{Binding PasswordManager}"
        TextOptions.TextRenderingMode="ClearType"
        BorderBrush="{DynamicResource AccentColorBrush}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Topmost="{Binding Source={x:Static p:Settings.Default}, Path=AlwaysOnTop}"
        BorderThickness="1" Closed="WinMain_Closed" KeyDown="TextRemoteFied_PreviewKeyDown" RightWindowCommandsOverlayBehavior="HiddenTitleBar" 
        WindowButtonCommandsOverlayBehavior="Always" Drop="WinMain_Drop" DragOver="WinMain_DragOver" DragEnter="WinMain_DragOver"
        AllowDrop="True" Activated="WinMain_Activated" Deactivated="WinMain_Deactivated">
    <Window.Resources>
        <converter:BoolToVisiblity x:Key="boolToVisiblity"/>
        <converter:BatteryStatusToVisual x:Key="batteryToIcon"/>
        <converter:BoolToNotBool x:Key="boolToNotBool"/>
        <converter:StringToFontFamily x:Key="fontFamilyConverter"/>
        <converter:IntToFontsize x:Key="fontSizeConverter"/>
        <converter:ConnectStatusToString x:Key="connectStatusToString"/>
    </Window.Resources>
    
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Click="Button_Options_Click">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="18"
                   Height="18"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   Text="options" />
                </StackPanel>
            </Button>
            
            <Rectangle Width="10"
                   Height="17" Opacity="0.7" Visibility="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay, Converter={StaticResource boolToVisiblity}}"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=controls:WindowCommands}, Path=Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill" Visual="{Binding ElementName=winMain, Path=BatteryStatus, Mode=OneWay, Converter={StaticResource batteryToIcon}}" >
                        <VisualBrush.RelativeTransform>
                            <TransformGroup>
                                <RotateTransform Angle="270" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </VisualBrush.RelativeTransform>
                    </VisualBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout x:Name="receivedFileFlyout" Theme="Accent" Height="Auto" IsOpen="{Binding Path=ServerConnection.ReceiveFilesManager.ShowNotification, Mode=TwoWay}" BorderThickness="0" CloseButtonIsCancel="True" HorizontalContentAlignment="Right" controls:ControlsHelper.HeaderMargin="10,10,8,8" Position="Top" Template="{StaticResource ResourceKey=FileFlyoutTemplate}" HeaderTemplate="{StaticResource ResourceKey=FileFlyoutHeaderTemplate}">
                <controls:FlipView Padding="0,0" SelectedIndex="{Binding ElementName=winMain, Path=ServerConnection.ReceiveFilesManager.Selected, Mode=TwoWay}" ItemsSource="{Binding ElementName=winMain, Path=ServerConnection.ReceiveFilesManager.FinishedFiles, Mode=OneWay}"
                   BorderThickness="0" MouseHoverBorderEnabled="False" IsBannerEnabled="False" Template="{StaticResource ResourceKey=FileFlipViewTemplate}" LeftTransition="Left" RightTransition="Right">
                    <controls:FlipView.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="12,12">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="50" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Image Height="80" Width="80" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding Thumbnail}"/>
                                    <TextBlock Grid.Column="1" Margin="20,0,0,0" FontSize="16" FontWeight="Medium" TextWrapping="Wrap" VerticalAlignment="Center">
                                          <Run Text='Received file "'/><Run Text="{Binding FileName, Mode=OneWay}"/><Run Text='"'/>
                                    </TextBlock>
                                </Grid>
                                <StackPanel Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Orientation="Horizontal">
                                    <Button  Content="Open" Width="100" Height="32" Style="{DynamicResource AccentedSquareButtonStyle}" BorderThickness="1" controls:ButtonHelper.PreserveTextCase="True" FontSize="14" FontWeight="Normal" Margin="0,0,10,0" Click="ButtonOpenFile_Click" />
                                    <Button  Content="Open Folder" Width="100" Height="32" Style="{DynamicResource AccentedSquareButtonStyle}" BorderThickness="1" controls:ButtonHelper.PreserveTextCase="True" FontSize="14" FontWeight="Normal" Click="ButtonOpenFolder_Click" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </controls:FlipView.ItemTemplate>
                </controls:FlipView>

            </controls:Flyout>
            <controls:Flyout x:Name="LogFlyout" Theme="Dark" Height="200" BorderThickness="0" CloseButtonIsCancel="True" Position="Bottom" controls:ControlsHelper.HeaderMargin="10,10,0,10">
                <controls:MetroAnimatedSingleRowTabControl>
                    <TabItem Header="Log">
                        <RichTextBox x:Name="rtbLog" IsDocumentEnabled="True" Margin="0,5,5,5" Focusable="True" AllowDrop="False" IsReadOnly="True" IsUndoEnabled="False" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </RichTextBox.Resources>
                        </RichTextBox>
                    </TabItem>
                    <TabItem Header="Debug">
                        <RichTextBox x:Name="rtbDebugLog" Margin="0,5,5,5" Focusable="True" AllowDrop="False" IsReadOnly="True" IsUndoEnabled="False" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <RichTextBox.Resources>
                                <Style TargetType="{x:Type Paragraph}">
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </RichTextBox.Resources>
                        </RichTextBox>
                    </TabItem>
                </controls:MetroAnimatedSingleRowTabControl>

            </controls:Flyout>
            <controls:Flyout x:Name="OptionsFlyout" Theme="Dark" Width="500" BorderThickness="0" CloseButtonIsCancel="True" Position="Left" Header="Options" controls:ControlsHelper.HeaderMargin="10" >
                <usercontrol:SettingsControl/>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid x:Name="gridMainContent">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" MinHeight="50"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" MinHeight="50"/>
            <RowDefinition Height="25" MinHeight="25"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Height="50">
            <controls:FlipView Style="{StaticResource BbSmallFlipViewStyle}" Padding="0,0" SelectedIndex="{Binding ElementName=winMain, Path=AppIconManager.Selected}"
                   BorderThickness="1" ItemsSource="{Binding ElementName=winMain, Path=AppIconManager.RecentApps}" IsEnabled="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay}"
                   Height="40" Width="80" HorizontalAlignment="Left" VerticalContentAlignment="Center" Margin="5,0,0,0" MinWidth="10" MinHeight="10" IsBannerEnabled="False" CircularNavigation="False" MouseHoverBorderEnabled="False" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                <controls:FlipView.ItemTemplate>
                    <DataTemplate>
                        <Image Height="32" Width="32" Source="{Binding Path=Icon}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </DataTemplate>
                </controls:FlipView.ItemTemplate>
            </controls:FlipView>


            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="0,0,5,0">
                <ToggleButton x:Name="btnConnect" BorderThickness="2" Margin="0,5" VerticalAlignment="Center" Width="40" Height="40" Style="{DynamicResource MetroCircleToggleButtonStyle}" 
                              HorizontalContentAlignment="Stretch" Click="BtnConnect_Click" ToolTip="Connect"
                              Focusable="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay, Converter={StaticResource boolToNotBool}}">
                    <Rectangle Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                       Height="18"
                       Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush x:Name="vbActionIconConnect" Stretch="Fill" Visual="{StaticResource appbar_camera_flash}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ToggleButton>
                <ToggleButton Margin="0,5" VerticalAlignment="Center" Width="40" Height="40" IsTabStop="False" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Keep Display On" Checked="ToggleButtonScreenLock_Checked" Unchecked="ToggleButtonScreenLock_Unchecked"
                              IsEnabled="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay}" IsChecked="{Binding Source={x:Static p:Settings.Default}, Path=PrefInitialDisplayLock, Mode=TwoWay}"
                              Focusable="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay, Converter={StaticResource boolToNotBool}}">
                    <Rectangle Grid.Column="0" Width="13"
                       Height="18"
                       Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" HorizontalAlignment="Left">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_iphone}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ToggleButton>
                <ToggleButton Margin="0,5" VerticalAlignment="Center" Width="40" Height="40" IsTabStop="False" Style="{DynamicResource MetroCircleToggleButtonStyle}" ToolTip="Screen Capture"
                              IsEnabled="{Binding Path=ScreenCapture.CanCapture, Mode=OneWay}" IsChecked="{Binding Path=ScreenCapture.IsScreenCapActive, Mode=OneWay}"
                              Focusable="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay, Converter={StaticResource boolToNotBool}}" Click="ScreenCapButton_Click">
                    <Rectangle Grid.Column="0" Width="18"
                       Height="16"
                       Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" HorizontalAlignment="Left">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_camera}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </ToggleButton>
                <Button BorderThickness="1" Width="32" Height="32" Style="{DynamicResource SquareButtonStyle}" HorizontalContentAlignment="Stretch" Margin="15,0,5,0" 
                        IsEnabled="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay}" ToolTip="Back" Click="ButtonBack_Click"
                        Focusable="False">
                    <Rectangle Width="16" 
                   Height="16"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_undo_point}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
                <Button BorderThickness="1" Width="32" Height="32" Style="{DynamicResource SquareButtonStyle}" HorizontalContentAlignment="Stretch" Margin="0,0,5,0"
                        IsEnabled="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay}"  ToolTip="Home" Click="ButtonHome_Click"
                        Focusable="False">
                    <Rectangle Width="16"
                   Height="16"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_home_empty}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                </Button>
            </StackPanel>
        </Grid>

        <Grid x:Name="gridScreenCap" Grid.Row="1" SizeChanged="GridScreenCap_SizeChanged">
            <Grid.RowDefinitions>
                <RowDefinition Height="0" MinHeight="0"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="50"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" BorderThickness="1" BorderBrush="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,5,5,0" Visibility="{Binding  Path=ServerConnection.ScreenCapture.IsShowing, Mode=OneWay, Converter={StaticResource boolToVisiblity}}">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Save" Click="ContextMenu_SaveScreenCap" />
                    </ContextMenu>
                </Border.ContextMenu>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=ServerConnection.ScreenCapture.IsScreenCapOutOfDate}" Value="False" />
                                    <Condition Binding="{Binding Path=ServerConnection.ScreenCapture.CanTap}" Value="True" />
                                    <Condition Binding="{Binding Source={x:Static p:Settings.Default}, Path=ScreenCapEnableTap}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Cursor" Value="Hand"/>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=ServerConnection.ScreenCapture.IsScreenCapOutOfDate}" Value="True">
                                <Setter Property="Opacity" Value="0.6"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Image Source="{Binding Path=Adb.CurrentScreenCap}" RenderOptions.BitmapScalingMode="HighQuality" MouseLeftButtonUp="ScreenCapImage_MouseLeftButtonUp" Visibility="Hidden" />
                    <usercontrol:VideoView VideoSource="{Binding Path=ServerConnection.ScreenCapture}" VerticalAlignment="Center"   />
                </Grid>
            </Border>
            <TextBlock Text="Waiting for permission on Android device" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding  Path=ServerConnection.ScreenCapture.IsWaitingForPermission, Mode=OneWay, Converter={StaticResource boolToVisiblity}}" Foreground="{DynamicResource AccentColorBrush}" />
            <GridSplitter Visibility="Collapsed" x:Name="gridSplitScreenCap" Margin="0,5" Background="{DynamicResource AccentColorBrush}" Grid.Row="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch" Height="5" ResizeDirection="Rows" />
            <TextBox Grid.Row="2" x:Name="textRemoteField" Margin="5,0" IsEnabled="False" TextWrapping="Wrap" HorizontalContentAlignment="Stretch" 
                     VerticalContentAlignment="Stretch" Focusable="True" IsTabStop="True" PreviewKeyDown="TextRemoteFied_PreviewKeyDown" AcceptsReturn="True" 
                     TextChanged="TextRemoteField_TextChanged" AllowDrop="True" Style="{StaticResource BbMetroTextBox}" 
                     FontFamily="{Binding Source={x:Static p:Settings.Default}, Path=TypeFontFamily, Converter={StaticResource fontFamilyConverter}, Mode=OneWay}"
                     FontSize="{Binding Source={x:Static p:Settings.Default}, Path=TypeFontSize, Converter={StaticResource fontSizeConverter}, Mode=OneWay}" 
                     controls:TextBoxHelper.IsSpellCheckContextMenuEnabled="{Binding Source={x:Static p:Settings.Default}, Path=TypeSpellCheck}" PreviewDragOver="TextRemoteField_DragOver" />
        </Grid>


        <Grid Grid.Row="2">
            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,0">
                <usercontrol:EmojiPickerX IsEnabled="{Binding ElementName=textRemoteField, Path=IsEnabled, Mode=OneWay}" EmojiChosen="EmojiPickerX_EmojiChosen"/>
                <Button BorderThickness="1" HorizontalAlignment="Left" Margin="5,5,5,0" VerticalAlignment="Top" Width="80" Height="32" Style="{DynamicResource SquareButtonStyle}" HorizontalContentAlignment="Stretch"
                     Focusable="False" IsEnabled="{Binding Path=ServerConnection.ConnectedToServer, Mode=OneWay}" Click="Button_Upload_Click">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.Column="0" Width="16"
                   Height="16"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" HorizontalAlignment="Left">
                            <Rectangle.OpacityMask>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_disk_upload}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                        <TextBlock Grid.Column="1" Text="Upload" Margin="0"
                   VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                </Button>
            </StackPanel>

            <Button x:Name="btnAction" BorderThickness="1" HorizontalAlignment="Right" Margin="0,5,5,0" VerticalAlignment="Top" Width="80" Height="32" Style="{DynamicResource SquareButtonStyle}" HorizontalContentAlignment="Stretch"
                    Click="BtnAction_Click" Focusable="False">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Rectangle Grid.Column="0" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                   Height="Auto"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" HorizontalAlignment="Left">
                        <Rectangle.OpacityMask>
                            <VisualBrush x:Name="vbActionIconBrush" Stretch="Fill" Visual="{StaticResource appbar_check}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Grid.Column="1" x:Name="tblActionText" Margin="0"
                   VerticalAlignment="Center"
                   Text="Go" HorizontalAlignment="Center" />
                </Grid>
            </Button>
        </Grid>

        <StatusBar Height="25" Margin="0,0,0,0" VerticalAlignment="Bottom" VerticalContentAlignment="Bottom" Grid.Row="3">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem MouseDoubleClick="StatusBarItem_Log_MouseDoubleClick">
                <TextBlock Name="lblStatusText" />
            </StatusBarItem>
            <Separator Grid.Column="1" Background="{DynamicResource IdealForegroundColorBrush}" />
            <StatusBarItem Grid.Column="2" MouseDoubleClick="StatusBarItem_Connect_MouseDoubleClick">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                   Height="20" Visibility="{Binding Path=ServerConnection.ConnectedToServer, Converter={StaticResource boolToVisiblity}, ConverterParameter='Invert'}"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=StatusBarItem}, Path=Foreground}" Margin="3,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_connect}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Rectangle Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"
                   Height="20" Visibility="{Binding Path=ServerConnection.ConnectedToServer, Converter={StaticResource boolToVisiblity}}"
                   Fill="{Binding RelativeSource={RelativeSource AncestorType=StatusBarItem}, Path=Foreground}" Margin="3,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_disconnect}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock x:Name="sbConnectText" Margin="4 0 0 0" VerticalAlignment="Center" >
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource connectStatusToString}">
                                <Binding Path="ServerConnection.ConnectedToServer" Mode="OneWay" />
                                <Binding Path="ServerConnection.IsConnecting" Mode="OneWay" />
                                <Binding Path="ServerConnection.IsNeverConnected" Mode="OneWay" />
                                <Binding Path="ServerConnection.IsDiscovering" Mode="OneWay" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3">
                <controls:ProgressRing IsActive="{Binding Path=ServerConnection.IsConnectingOrDiscovering, Mode=OneWay}" Height="20" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" 
                                           Foreground="{DynamicResource IdealForegroundColorBrush}" Margin="3,0"/>
            </StatusBarItem>
        </StatusBar>


    </Grid>

</controls:MetroWindow>
